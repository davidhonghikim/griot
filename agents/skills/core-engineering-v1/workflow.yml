# kOS Agent Workflow - Component File

version: '1.0'
status: ACTIVE
description: This document is the absolute source of truth for the agent development workflow on the kOS project. It is non-negotiable. Adherence to this process is mandatory for all agents to ensure consistency, quality, and a traceable history.

prime_directive:
  name: No Surprises
  goal: Your goal is to perform your assigned task while leaving a clear, auditable trail of your work. The next agent, or a human developer, must be able to understand what you did, what you discovered, and why you made the decisions you did, simply by reading the project's documentation. Do not invent your own systems. Follow this one precisely.

workflow:
  - step: 1
    name: Onboarding (Your First 5 Minutes)
    instruction: Before taking any other action, you must ground yourself in the current project state by understanding your active profile.
    details: The loading system will provide your profile, which includes the system prompt, workflow, and project overview. Review them before starting.

  - step: 2
    name: The Agent Changelog (Your Primary Duty)
    instruction: The `agents/changelogs/` directory contains the official, chronological journal of the project. You must document your session in a file within this directory.
    start_of_session:
      instruction: Before you begin work, append a new entry to the changelog using the following template. The timestamp MUST be in `YYYY-MM-DD` format.
      template: |
        ---
        ## Agent: [Your Name/Model] - [YYYY-MM-DD]

        **Mission**: [A brief, one-sentence summary of the goal from LATEST_HANDOFF.md]

        ### Log:
        - **[YYYY-MM-DDTHH:MM:SSZ]**: ONBOARDING - Session started. Reviewing rules and handoff directive.
    during_session:
      instruction: You must log major accomplishments, not every granular action. The goal is to create a high-level, human-readable audit trail that summarizes progress.
      guidelines:
        - Log Major Tasks: Instead of logging every `edit_file` or `run_terminal_cmd` call, batch your work into logical units. Create a single log entry when a significant, multi-step task is complete.
        - Log Key Events: Continue to log important non-action events as they occur, using the appropriate entry type (`FINDING`, `CORRECTION`, `DECISION`).
      examples:
        - "2025-06-25T18:35:00Z: FINDING - Discovered a `MessageType` mismatch between specifications and the core protocol."
        - "2025-06-25T19:10:00Z: ACTION - Completed the full 5-part specification suite for the Griot Node."

  - step: 3
    name: Implementation Plans System
    instruction: For complex tasks, use the Implementation Plans System located in `agents/implementation-plans/`.
    usage:
      - task: Creating Plans
        command: agents/shared/scripts/create-plan-dir.sh "[plan-name]"
      - task: Managing Plan Lifecycle
        description: Plans move through the `backlog`, `active`, and `archive` directories.
    documentation: See `agents/implementation-plans/README.md` for the full workflow.

  - step: 4
    name: Project-Wide Style & Naming Conventions
    instruction: To ensure perfect interoperability and a predictable structure, all agents MUST adhere to the following conventions without deviation.
    conventions:
      directory_structure:
        - All project documentation and specifications MUST reside under `docs/ai-q/`.
        - All agent process files (profiles, changelogs, handoffs) MUST reside under `agents/`.
        - Node specification suites MUST be placed in a subdirectory named for the node under `docs/ai-q/03_node_specifications/`.
      file_naming:
        - Node Specifications: Must follow the format `[##]_[SpecName].md`.
        - Handoffs: The primary handoff file MUST be `agents/handoff/LATEST_HANDOFF.md`. Archived handoffs follow `[YYYY-MM-DD]_[AgentName]_[Description].md`.
      markdown_style:
        - All documentation MUST be in Markdown (`.md`).
        - Specification files MUST begin with a YAML frontmatter block containing `title` and `version`.
        - Headings MUST be used hierarchically.
        - Code blocks MUST be properly fenced with the language identifier.
      code_style:
        - All code (TypeScript, etc.) MUST adhere to the project's Prettier and ESLint configurations.

  - step: 5
    name: The Handoff Process (Your Last 5 Minutes)
    instruction: When your assigned mission is complete, you must execute the following handoff procedure precisely.
    tasks:
      - name: Finalize Your Log
        instruction: Add a final "SESSION SUMMARY" to your entry in the changelog.
        template: |
          ### SESSION SUMMARY:
          **Accomplishments**: 
          - [List of completed primary goals from the mission.]
          - [List of any other significant achievements.]
          **Final State**: [A brief, 1-2 sentence description of the state of the codebase and documentation at the end of the session.]
          **Key Findings**: 
          - [A bulleted list of any critical discoveries (`FINDING` entries) made during the session.]
          - [If no significant findings, state "None."]
      - name: Archive the Old Handoff
        instruction: The handoff you received is now history. Move it to the archive.
        command: mv agents/handoff/LATEST_HANDOFF.md agents/handoff/archive/[YYYY-MM-DD]_[YourName]_[Description].md
      - name: Create the New Handoff
        instruction: Create a new, clean `agents/handoff/LATEST_HANDOFF.md` file.
        template: |
          # **NEXT AGENT HANDOFF**

          **UTC**: [Timestamp]
          **From Agent**: [Your Name/Model]
          **Previous Handoff**: `[Path to the handoff you just archived]`

          ---

          ## 1. Current Project Status
          [A brief, 1-2 sentence summary of the project's current state.]

          ## 2. Your Directive
          [A clear, concise, and specific mission for the next agent.]

          ## 3. Context & History
          For a complete history of the actions that led to this handoff, please review my final session log in `agents/changelogs/` under the entry for **[YYYY-MM-DD]**. 