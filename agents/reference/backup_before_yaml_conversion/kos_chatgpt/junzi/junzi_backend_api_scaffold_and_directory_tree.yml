title: Junzi Backend Api Scaffold And Directory Tree
description: ''
type: documentation
status: current
priority: medium
last_updated: '2025-06-28'
conversion_date: '2025-06-28T19:30:47.723873'
original_format: markdown
content_type: api_specification
word_count: 441
line_count: 111

---

# JUNZI Backend API Scaffold and Directory Tree

**Node Class:** JunziNode  
**System:** kOS Ecosystem  
**Document Type:** Backend Project Structure and API Scaffold Specification

---

## ðŸŽ¯ Primary Backend Framework:
- **FastAPI (Python)** for API layer
- **PostgreSQL** for relational data storage
- **Docker Compose** for containerized local development and deployment
- **Alembic** for database migrations
- **Pytest** for testing

---

## ðŸ“‚ Directory Structure:

```bash
junzi_backend/
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ api/
â”‚   â”‚   â”œâ”€â”€ v1/
â”‚   â”‚   â”‚   â”œâ”€â”€ endpoints/
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ entities.py
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ contradictions.py
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ risk_scores.py
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ promises.py
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ alerts.py
â”‚   â”‚   â”‚   â”‚   â””â”€â”€ user_reports.py
â”‚   â”‚   â”‚   â””â”€â”€ api_router.py
â”‚   â”œâ”€â”€ core/
â”‚   â”‚   â”œâ”€â”€ config.py
â”‚   â”‚   â””â”€â”€ security.py
â”‚   â”œâ”€â”€ db/
â”‚   â”‚   â”œâ”€â”€ base.py
â”‚   â”‚   â”œâ”€â”€ session.py
â”‚   â”‚   â””â”€â”€ models/
â”‚   â”‚       â”œâ”€â”€ entity.py
â”‚   â”‚       â”œâ”€â”€ action_event.py
â”‚   â”‚       â”œâ”€â”€ contradiction.py
â”‚   â”‚       â”œâ”€â”€ risk_score.py
â”‚   â”‚       â”œâ”€â”€ promise.py
â”‚   â”‚       â”œâ”€â”€ user_report.py
â”‚   â”‚       â”œâ”€â”€ source.py
â”‚   â”‚       â””â”€â”€ bias_audit.py
â”‚   â”œâ”€â”€ services/
â”‚   â”‚   â”œâ”€â”€ contradiction_scanner.py
â”‚   â”‚   â”œâ”€â”€ risk_profiler.py
â”‚   â”‚   â”œâ”€â”€ promise_tracker.py
â”‚   â”‚   â””â”€â”€ bias_audit.py
â”‚   â”œâ”€â”€ utils/
â”‚   â”‚   â””â”€â”€ provenance.py
â”‚   â”œâ”€â”€ main.py
â”‚   â””â”€â”€ dependencies.py
â”œâ”€â”€ alembic/
â”œâ”€â”€ tests/
â”‚   â”œâ”€â”€ unit/
â”‚   â”œâ”€â”€ integration/
â”‚   â””â”€â”€ e2e/
â”œâ”€â”€ docker-compose.yml
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ README.md
â””â”€â”€ .env
```

---

## âœ… API Route Scaffolding (FastAPI v1 Router)

| Endpoint | File | Function |
|---|---|---|
| `/entities/{id}/profile` | entities.py | get_entity_profile |
| `/entities/{id}/contradictions` | contradictions.py | get_entity_contradictions |
| `/risk_scores/` | risk_scores.py | list_risk_scores |
| `/promises/{entity_id}` | promises.py | get_entity_promises |
| `/alerts/` | alerts.py | get_current_alerts |
| `/sources/{source_id}` | source.py | get_source_details |
| `/user_reports/` | user_reports.py | submit_user_report |

---

## âœ… Core Service Layer Responsibilities:
| Service | Purpose |
|---|---|
| contradiction_scanner.py | Business logic for contradiction detection |
| risk_profiler.py | Risk score calculation and bias mitigation hooks |
| promise_tracker.py | Promise status detection and lifecycle management |
| bias_audit.py | Bias audit pipeline management |

---

## âœ… Testing Layers:
| Folder | Coverage |
|---|---|
| unit/ | Agent logic, services, and models |
| integration/ | API endpoint and DB interaction |
| e2e/ | Full data flow from ingestion to public API output |

---

## âœ… Deployment Targets:
- Local Docker for development
- Kubernetes-ready for kOS cluster deployment
- CI/CD hooks for ethical deployment gate checks

---

**This document now defines the canonical JUNZI Backend API Scaffold and Directory Tree for engineering teams working within the kOS ecosystem until formally revised.**


