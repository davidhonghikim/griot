version: '3.8'

services:
  griot-node:
    build: .
    container_name: griot-node
    ports:
      - "30437:30437"
    environment:
      - ALLOW_INSECURE_TRANSPORT=true
      - OLLAMA_HOST=http://ollama:11434
      - OPENWEBUI_HOST=http://openwebui:3000
      - COMFYUI_HOST=http://comfyui:8188
      - A1111_HOST=http://a1111:7860
      - LLAMA_CPP_HOST=http://llama-cpp:8080
      - VLLM_HOST=http://vllm:8000
      - HUGGINGFACE_HOST=https://api-inference.huggingface.co
    depends_on:
      - mongo
      - weaviate
      - neo4j
      - ollama
      - openwebui
      - comfyui
      - a1111
      - llama-cpp
      - vllm
    volumes:
      - ./:/app

  # === RAG System Infrastructure ===
  mongo:
    image: mongo:latest
    container_name: griot-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: griot-weaviate
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - weaviatedata:/var/lib/weaviate
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - CLUSTER_HOSTNAME=node1

  neo4j:
    image: neo4j:latest
    container_name: griot-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4jdata:/data
    environment:
      - NEO4J_AUTH=none

  postgres:
    image: postgres:15
    container_name: griot-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=griot
      - POSTGRES_PASSWORD=griot
      - POSTGRES_DB=griot
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # === Local AI Model Services ===
  ollama:
    image: ollama/ollama:latest
    container_name: griot-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  llama-cpp:
    image: ghcr.io/ggerganov/llama.cpp:server
    container_name: griot-llama-cpp
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - llama_cpp_models:/models
      - llama_cpp_data:/data
    environment:
      - LLAMA_SERVER_HOST=0.0.0.0
      - LLAMA_SERVER_PORT=8080
    command: >
      --server
      --host 0.0.0.0
      --port 8080
      --model /models/llama-2-7b-chat.gguf
      --ctx-size 4096
      --threads 8
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  vllm:
    image: vllm/vllm-openai:latest
    container_name: griot-vllm
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - vllm_models:/models
      - vllm_data:/data
    environment:
      - VLLM_HOST=0.0.0.0
      - VLLM_PORT=8000
      - VLLM_MODEL=microsoft/DialoGPT-medium
    command: >
      --model microsoft/DialoGPT-medium
      --host 0.0.0.0
      --port 8000
      --tensor-parallel-size 1
      --gpu-memory-utilization 0.9
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # === AI Web Interfaces ===
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: griot-openwebui
    restart: unless-stopped
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=griot-secret-key-change-in-production
      - DEFAULT_MODELS=llama3.2,llama3.1,llama3.1.1
    volumes:
      - openwebui_data:/app/backend/data
    depends_on:
      - ollama

  # === Image Generation Services ===
  comfyui:
    image: ghcr.io/ltdrdata/comfyui:latest
    container_name: griot-comfyui
    restart: unless-stopped
    ports:
      - "8188:8188"
    volumes:
      - comfyui_data:/workspace
      - comfyui_models:/workspace/models
      - comfyui_input:/workspace/input
      - comfyui_output:/workspace/output
    environment:
      - COMFYUI_EXTRA_ARGS=--listen 0.0.0.0 --port 8188
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  a1111:
    image: ghcr.io/hlky/stable-diffusion-webui:latest
    container_name: griot-a1111
    restart: unless-stopped
    ports:
      - "7860:7860"
    volumes:
      - a1111_data:/data
      - a1111_models:/data/models
      - a1111_outputs:/data/outputs
    environment:
      - COMMANDLINE_ARGS=--listen --port 7860 --api --enable-insecure-extension-access
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # === Vector Database Services ===
  chromadb:
    image: chromadb/chroma:latest
    container_name: griot-chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]

  qdrant:
    image: qdrant/qdrant:latest
    container_name: griot-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334

  milvus:
    image: milvusdb/milvus:latest
    container_name: griot-milvus
    restart: unless-stopped
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    depends_on:
      - etcd
      - minio

  etcd:
    image: quay.io/coreos/etcd:v3.5.21
    container_name: griot-etcd
    restart: unless-stopped
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd_data:/etcd

  minio:
    image: minio/minio:latest
    container_name: griot-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"

  # === Monitoring and Management ===
  n8n:
    image: n8nio/n8n:latest
    container_name: griot-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - GENERIC_TIMEZONE=America/New_York
      - DB_SQLITE_MODE=1
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=griot
      - N8N_BASIC_AUTH_PASSWORD=griot-password-change-in-production
    volumes:
      - n8n_data:/home/node/.n8n

  # === Development and Testing ===
  jupyter:
    image: jupyter/datascience-notebook:latest
    container_name: griot-jupyter
    restart: unless-stopped
    ports:
      - "8888:8888"
    volumes:
      - jupyter_data:/home/jovyan/work
      - ./notebooks:/home/jovyan/work/notebooks
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=griot-jupyter-token

volumes:
  # RAG System Volumes
  mongodata:
  weaviatedata:
  neo4jdata:
  pgdata:
  
  # Local AI Model Volumes
  ollama_models:
  llama_cpp_models:
  llama_cpp_data:
  vllm_models:
  vllm_data:
  
  # Web Interface Volumes
  openwebui_data:
  
  # Image Generation Volumes
  comfyui_data:
  comfyui_models:
  comfyui_input:
  comfyui_output:
  a1111_data:
  a1111_models:
  a1111_outputs:
  
  # Vector Database Volumes
  chromadb_data:
  qdrant_data:
  milvus_data:
  etcd_data:
  minio_data:
  
  # Automation Volumes
  n8n_data:
  
  # Development Volumes
  jupyter_data:
