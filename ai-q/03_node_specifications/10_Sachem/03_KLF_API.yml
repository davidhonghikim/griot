metadata:
  original_file: 03_KLF_API.md
  conversion_date: '2025-06-30T11:00:00Z'
  format: yaml
frontmatter:
  title: 'Sachem Node 03: KLF API'
  version: 1.0
sections:
- level: 1
  title: '**3. Sachem Node KLF API Specification**'
  type: section
  content: ''
- level: 2
  title: 3.1. Introduction
  type: section
  content: The Sachem Node's KLF API is the public interface for the kOS consensus
    and reputation system. It allows nodes to propose claims for consensus, cast votes
    on active debates, and query the reputation of other nodes.
- level: 2
  title: 3.2. KLF Message Types
  type: section
  content: 'The Sachem Node listens for the following message types:


    | Message Type                | Description                                | Payload
    Interface              |

    | --------------------------- | ------------------------------------------ | ------------------------------
    |

    | `SACHEM_PROPOSE_CLAIM`      | A node proposes a new `Claim` for debate.  | `SachemProposeClaimRequest`    |

    | `SACHEM_CAST_VOTE`          | A node casts a `Vote` on an active `Claim`.| `SachemCastVoteRequest`        |

    | `SACHEM_QUERY_REPUTATION`   | A node requests the reputation of another. | `SachemQueryReputationRequest`
    |


    The Sachem Node dispatches the following message types:


    | Message Type                | Description                                | Payload
    Interface              |

    | --------------------------- | ------------------------------------------ | ------------------------------
    |

    | `SACHEM_DEBATE_OPENED`      | Announces a new `Claim` is open for voting.| `SachemDebateOpened`           |

    | `SACHEM_ACCORD_REACHED`     | Announces the final `Accord` on a `Claim`. | `Accord`                       |

    | `SACHEM_REPUTATION_RESPONSE`| Returns the result of a reputation query.  | `SachemReputationResponse`     |

    | `SACHEM_API_ERROR`          | Indicates a processing error.              | `SachemApiError`               |'
- level: 2
  title: 3.3. API Endpoint Details & Payloads
  type: section
  content: ''
- level: 3
  title: 3.3.1. Proposing a Claim
  type: section
  content: "**Request Message:** `SACHEM_PROPOSE_CLAIM`\n-   **Payload (`SachemProposeClaimRequest`)**:\n\
    \    ```typescript\n    interface SachemProposeClaimRequest {\n      statement:\
    \ string;\n      evidence_tapestryIds: string[];\n    }\n    ```\n\n**Response\
    \ Message:** `SACHEM_DEBATE_OPENED` (Broadcast to relevant nodes)\n-   **Payload\
    \ (`SachemDebateOpened`)**:\n    ```typescript\n    interface SachemDebateOpened\
    \ {\n      claimId: string;\n      proposingNodeId: string;\n      statement:\
    \ string;\n      voting_deadline: Date;\n    }\n    ```"
- level: 3
  title: 3.3.2. Casting a Vote
  type: section
  content: "**Request Message:** `SACHEM_CAST_VOTE`\n-   **Payload (`SachemCastVoteRequest`)**:\n\
    \    ```typescript\n    interface SachemCastVoteRequest {\n      claimId: string;\n\
    \      choice: 'FOR' | 'AGAINST' | 'ABSTAIN';\n    }\n    ```\n- **Response**:\
    \ None, this is a fire-and-forget message. The result is announced in the final\
    \ `Accord`."
- level: 3
  title: 3.3.3. Announcing an Accord
  type: section
  content: '**Dispatch Message:** `SACHEM_ACCORD_REACHED` (Broadcast)

    - **Description**: This message is broadcast to all subscribed nodes upon the
    finalization of a debate. The payload is the full `Accord` data model.

    - **Payload (`Accord`)**: See `02_Data_Models.md`.'
- level: 3
  title: 3.3.4. Querying Reputation
  type: section
  content: "**Request Message:** `SACHEM_QUERY_REPUTATION`\n-   **Payload (`SachemQueryReputationRequest`)**:\n\
    \    ```typescript\n    interface SachemQueryReputationRequest {\n      queryId:\
    \ string;\n      targetNodeId: string;\n    }\n    ```\n\n**Response Message:**\
    \ `SACHEM_REPUTATION_RESPONSE`\n-   **Payload (`SachemReputationResponse`)**:\n\
    \    ```typescript\n    interface SachemReputationResponse {\n      queryId: string;\n\
    \      reputationRecord: ReputationRecord;\n    }\n    ```"
- level: 3
  title: 3.3.5. Error Handling
  type: section
  content: "**Response Message:** `SACHEM_API_ERROR`\n-   **Payload (`SachemApiError`)**:\n\
    \    ```typescript\n    interface SachemApiError {\n      requestMessageId: string;\n\
    \      errorCode: 'INVALID_PAYLOAD' | 'CLAIM_NOT_FOUND' | 'DEBATE_CLOSED' | 'INTERNAL_ERROR';\n\
    \      errorMessage: string;\n    }\n    ```"
